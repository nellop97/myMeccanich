// ========== DTO COMUNI ==========

/**
 * Risposta generica per operazioni API
 */
public class ApiResponse<T> {
    private boolean success;
    private String message;
    private T data;
    private LocalDateTime timestamp;
    
    public ApiResponse() {
        this.timestamp = LocalDateTime.now();
    }
    
    public ApiResponse(boolean success, String message, T data) {
        this();
        this.success = success;
        this.message = message;
        this.data = data;
    }
    
    public static <T> ApiResponse<T> success(T data) {
        return new ApiResponse<>(true, "Operazione completata con successo", data);
    }
    
    public static <T> ApiResponse<T> success(String message, T data) {
        return new ApiResponse<>(true, message, data);
    }
    
    public static <T> ApiResponse<T> error(String message) {
        return new ApiResponse<>(false, message, null);
    }
    
    // Getter e setter
    public boolean isSuccess() { return success; }
    public void setSuccess(boolean success) { this.success = success; }
    public String getMessage() { return message; }
    public void setMessage(String message) { this.message = message; }
    public T getData() { return data; }
    public void setData(T data) { this.data = data; }
    public LocalDateTime getTimestamp() { return timestamp; }
    public void setTimestamp(LocalDateTime timestamp) { this.timestamp = timestamp; }
}

/**
 * DTO per paginazione
 */
public class PageResponse<T> {
    private List<T> content;
    private int page;
    private int size;
    private long totalElements;
    private int totalPages;
    private boolean first;
    private boolean last;
    
    // Costruttori, getter e setter
    public PageResponse() {}
    
    public PageResponse(List<T> content, int page, int size, long totalElements) {
        this.content = content;
        this.page = page;
        this.size = size;
        this.totalElements = totalElements;
        this.totalPages = (int) Math.ceil((double) totalElements / size);
        this.first = page == 0;
        this.last = page >= totalPages - 1;
    }
    
    // Getter e setter
    public List<T> getContent() { return content; }
    public void setContent(List<T> content) { this.content = content; }
    public int getPage() { return page; }
    public void setPage(int page) { this.page = page; }
    public int getSize() { return size; }
    public void setSize(int size) { this.size = size; }
    public long getTotalElements() { return totalElements; }
    public void setTotalElements(long totalElements) { this.totalElements = totalElements; }
    public int getTotalPages() { return totalPages; }
    public void setTotalPages(int totalPages) { this.totalPages = totalPages; }
    public boolean isFirst() { return first; }
    public void setFirst(boolean first) { this.first = first; }
    public boolean isLast() { return last; }
    public void setLast(boolean last) { this.last = last; }
}

// ========== USER DTO ==========

/**
 * DTO per registrazione utente
 */
public class UserRegistrationRequest {
    @NotBlank(message = "Email obbligatoria")
    @Email(message = "Formato email non valido")
    private String email;
    
    @NotBlank(message = "Password obbligatoria")
    @Size(min = 8, message = "Password deve essere di almeno 8 caratteri")
    private String password;
    
    @NotBlank(message = "Nome obbligatorio")
    private String firstName;
    
    @NotBlank(message = "Cognome obbligatorio")
    private String lastName;
    
    @Pattern(regexp = "^[+]?[0-9\\s\\-\\(\\)]{10,15}$", message = "Numero di telefono non valido")
    private String phoneNumber;
    
    @NotNull(message = "Ruolo obbligatorio")
    private UserRole role;
    
    private String address;
    private String city;
    
    @Pattern(regexp = "^[0-9]{5}$", message = "CAP deve essere di 5 cifre")
    private String postalCode;
    
    @Pattern(regexp = "^[A-Z]{6}[0-9]{2}[A-Z][0-9]{2}[A-Z][0-9]{3}[A-Z]$", 
            message = "Codice fiscale non valido")
    private String fiscalCode;
    
    @Pattern(regexp = "^[0-9]{11}$", message = "Partita IVA deve essere di 11 cifre")
    private String vatNumber;
    
    // Costruttori, getter e setter
    public UserRegistrationRequest() {}
    
    // Getter e setter
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    public String getPassword() { return password; }
    public void setPassword(String password) { this.password = password; }
    public String getFirstName() { return firstName; }
    public void setFirstName(String firstName) { this.firstName = firstName; }
    public String getLastName() { return lastName; }
    public void setLastName(String lastName) { this.lastName = lastName; }
    public String getPhoneNumber() { return phoneNumber; }
    public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }
    public UserRole getRole() { return role; }
    public void setRole(UserRole role) { this.role = role; }
    public String getAddress() { return address; }
    public void setAddress(String address) { this.address = address; }
    public String getCity() { return city; }
    public void setCity(String city) { this.city = city; }
    public String getPostalCode() { return postalCode; }
    public void setPostalCode(String postalCode) { this.postalCode = postalCode; }
    public String getFiscalCode() { return fiscalCode; }
    public void setFiscalCode(String fiscalCode) { this.fiscalCode = fiscalCode; }
    public String getVatNumber() { return vatNumber; }
    public void setVatNumber(String vatNumber) { this.vatNumber = vatNumber; }
}

/**
 * DTO per login
 */
public class LoginRequest {
    @NotBlank(message = "Email obbligatoria")
    @Email(message = "Formato email non valido")
    private String email;
    
    @NotBlank(message = "Password obbligatoria")
    private String password;
    
    // Costruttori, getter e setter
    public LoginRequest() {}
    
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    public String getPassword() { return password; }
    public void setPassword(String password) { this.password = password; }
}

/**
 * DTO per risposta login con token
 */
public class LoginResponse {
    private String token;
    private String tokenType = "Bearer";
    private UserProfileResponse user;
    
    public LoginResponse(String token, UserProfileResponse user) {
        this.token = token;
        this.user = user;
    }
    
    // Getter e setter
    public String getToken() { return token; }
    public void setToken(String token) { this.token = token; }
    public String getTokenType() { return tokenType; }
    public void setTokenType(String tokenType) { this.tokenType = tokenType; }
    public UserProfileResponse getUser() { return user; }
    public void setUser(UserProfileResponse user) { this.user = user; }
}

/**
 * DTO per profilo utente
 */
public class UserProfileResponse {
    private Long id;
    private String email;
    private String firstName;
    private String lastName;
    private String phoneNumber;
    private UserRole role;
    private String address;
    private String city;
    private String postalCode;
    private String fiscalCode;
    private String vatNumber;
    private LocalDateTime createdAt;
    
    // Costruttori, getter e setter
    public UserProfileResponse() {}
    
    // Getter e setter
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    public String getFirstName() { return firstName; }
    public void setFirstName(String firstName) { this.firstName = firstName; }
    public String getLastName() { return lastName; }
    public void setLastName(String lastName) { this.lastName = lastName; }
    public String getPhoneNumber() { return phoneNumber; }
    public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }
    public UserRole getRole() { return role; }
    public void setRole(UserRole role) { this.role = role; }
    public String getAddress() { return address; }
    public void setAddress(String address) { this.address = address; }
    public String getCity() { return city; }
    public void setCity(String city) { this.city = city; }
    public String getPostalCode() { return postalCode; }
    public void setPostalCode(String postalCode) { this.postalCode = postalCode; }
    public String getFiscalCode() { return fiscalCode; }
    public void setFiscalCode(String fiscalCode) { this.fiscalCode = fiscalCode; }
    public String getVatNumber() { return vatNumber; }
    public void setVatNumber(String vatNumber) { this.vatNumber = vatNumber; }
    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
}

/**
 * DTO per aggiornamento profilo
 */
public class UserProfileUpdateRequest {
    @NotBlank(message = "Nome obbligatorio")
    private String firstName;
    
    @NotBlank(message = "Cognome obbligatorio")
    private String lastName;
    
    @Pattern(regexp = "^[+]?[0-9\\s\\-\\(\\)]{10,15}$", message = "Numero di telefono non valido")
    private String phoneNumber;
    
    private String address;
    private String city;
    
    @Pattern(regexp = "^[0-9]{5}$", message = "CAP deve essere di 5 cifre")
    private String postalCode;
    
    // Costruttori, getter e setter
    public UserProfileUpdateRequest() {}
    
    public String getFirstName() { return firstName; }
    public void setFirstName(String firstName) { this.firstName = firstName; }
    public String getLastName() { return lastName; }
    public void setLastName(String lastName) { this.lastName = lastName; }
    public String getPhoneNumber() { return phoneNumber; }
    public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }
    public String getAddress() { return address; }
    public void setAddress(String address) { this.address = address; }
    public String getCity() { return city; }
    public void setCity(String city) { this.city = city; }
    public String getPostalCode() { return postalCode; }
    public void setPostalCode(String postalCode) { this.postalCode = postalCode; }
}

/**
 * DTO per cambio password
 */
public class ChangePasswordRequest {
    @NotBlank(message = "Password attuale obbligatoria")
    private String currentPassword;
    
    @NotBlank(message = "Nuova password obbligatoria")
    @Size(min = 8, message = "Password deve essere di almeno 8 caratteri")
    private String newPassword;
    
    // Costruttori, getter e setter
    public ChangePasswordRequest() {}
    
    public String getCurrentPassword() { return currentPassword; }
    public void setCurrentPassword(String currentPassword) { this.currentPassword = currentPassword; }
    public String getNewPassword() { return newPassword; }
    public void setNewPassword(String newPassword) { this.newPassword = newPassword; }
}

// ========== VEHICLE DTO ==========

/**
 * DTO per registrazione veicolo
 */
public class VehicleRegistrationRequest {
    @NotBlank(message = "Targa obbligatoria")
    @Pattern(regexp = "^[A-Z]{2}[0-9]{3}[A-Z]{2}$", message = "Formato targa non valido")
    private String licensePlate;
    
    @NotBlank(message = "VIN obbligatorio")
    @Size(min = 17, max = 17, message = "VIN deve essere di 17 caratteri")
    private String vin;
    
    @NotNull(message = "Modello veicolo obbligatorio")
    private Long modelId;
    
    @NotNull(message = "Anno obbligatorio")
    @Min(value = 1900, message = "Anno non valido")
    @Max(value = 2030, message = "Anno non valido")
    private Integer year;
    
    private String color;
    
    @Min(value = 0, message = "Chilometraggio non può essere negativo")
    private Integer mileage;
    
    private String engineCode;
    private String fuelType;
    
    @Past(message = "Data immatricolazione deve essere nel passato")
    private Date registrationDate;
    
    @Future(message = "Data prossima revisione deve essere nel futuro")
    private Date nextInspectionDate;
    
    @Future(message = "Scadenza assicurazione deve essere nel futuro")
    private Date insuranceExpiryDate;
    
    // Costruttori, getter e setter
    public VehicleRegistrationRequest() {}
    
    // Getter e setter
    public String getLicensePlate() { return licensePlate; }
    public void setLicensePlate(String licensePlate) { this.licensePlate = licensePlate; }
    public String getVin() { return vin; }
    public void setVin(String vin) { this.vin = vin; }
    public Long getModelId() { return modelId; }
    public void setModelId(Long modelId) { this.modelId = modelId; }
    public Integer getYear() { return year; }
    public void setYear(Integer year) { this.year = year; }
    public String getColor() { return color; }
    public void setColor(String color) { this.color = color; }
    public Integer getMileage() { return mileage; }
    public void setMileage(Integer mileage) { this.mileage = mileage; }
    public String getEngineCode() { return engineCode; }
    public void setEngineCode(String engineCode) { this.engineCode = engineCode; }
    public String getFuelType() { return fuelType; }
    public void setFuelType(String fuelType) { this.fuelType = fuelType; }
    public Date getRegistrationDate() { return registrationDate; }
    public void setRegistrationDate(Date registrationDate) { this.registrationDate = registrationDate; }
    public Date getNextInspectionDate() { return nextInspectionDate; }
    public void setNextInspectionDate(Date nextInspectionDate) { this.nextInspectionDate = nextInspectionDate; }
    public Date getInsuranceExpiryDate() { return insuranceExpiryDate; }
    public void setInsuranceExpiryDate(Date insuranceExpiryDate) { this.insuranceExpiryDate = insuranceExpiryDate; }
}

// ========== MAINTENANCE DTO ==========

/**
 * DTO per creazione intervento manutenzione
 */
public class MaintenanceRecordCreateRequest {
    @NotNull(message = "Veicolo obbligatorio")
    private Long vehicleId;
    
    private Long workshopId;
    private Long mechanicId;
    
    @NotNull(message = "Data servizio obbligatoria")
    @PastOrPresent(message = "Data servizio non può essere nel futuro")
    private Date serviceDate;
    
    @NotNull(message = "Chilometraggio al servizio obbligatorio")
    @Min(value = 0, message = "Chilometraggio non può essere negativo")
    private Integer mileageAtService;
    
    @NotNull(message = "Tipo manutenzione obbligatorio")
    private MaintenanceType type;
    
    @NotBlank(message = "Descrizione obbligatoria")
    @Size(max = 1000, message = "Descrizione troppo lunga")
    private String description;
    
    @Size(max = 2000, message = "Note troppo lunghe")
    private String notes;
    
    @DecimalMin(value = "0.0", inclusive = false, message = "Il costo deve essere positivo")
    private BigDecimal cost;
    
    @Future(message = "Data prossimo servizio deve essere nel futuro")
    private Date nextServiceDate;
    
    @Min(value = 0, message = "Chilometraggio prossimo servizio non può essere negativo")
    private Integer nextServiceMileage;
    
    private List<UsedPartRequest> usedParts;
    
    // Costruttori, getter e setter
    public MaintenanceRecordCreateRequest() {}
    
    public Long getVehicleId() { return vehicleId; }
    public void setVehicleId(Long vehicleId) { this.vehicleId = vehicleId; }
    public Long getWorkshopId() { return workshopId; }
    public void setWorkshopId(Long workshopId) { this.workshopId = workshopId; }
    public Long getMechanicId() { return mechanicId; }
    public void setMechanicId(Long mechanicId) { this.mechanicId = mechanicId; }
    public Date getServiceDate() { return serviceDate; }
    public void setServiceDate(Date serviceDate) { this.serviceDate = serviceDate; }
    public Integer getMileageAtService() { return mileageAtService; }
    public void setMileageAtService(Integer mileageAtService) { this.mileageAtService = mileageAtService; }
    public MaintenanceType getType() { return type; }
    public void setType(MaintenanceType type) { this.type = type; }
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public String getNotes() { return notes; }
    public void setNotes(String notes) { this.notes = notes; }
    public BigDecimal getCost() { return cost; }
    public void setCost(BigDecimal cost) { this.cost = cost; }
    public Date getNextServiceDate() { return nextServiceDate; }
    public void setNextServiceDate(Date nextServiceDate) { this.nextServiceDate = nextServiceDate; }
    public Integer getNextServiceMileage() { return nextServiceMileage; }
    public void setNextServiceMileage(Integer nextServiceMileage) { this.nextServiceMileage = nextServiceMileage; }
    public List<UsedPartRequest> getUsedParts() { return usedParts; }
    public void setUsedParts(List<UsedPartRequest> usedParts) { this.usedParts = usedParts; }
}

/**
 * DTO per parti utilizzate in input
 */
public class UsedPartRequest {
    @NotBlank(message = "Nome parte obbligatorio")
    private String partName;
    
    private String partNumber;
    private String brand;
    
    @NotNull(message = "Quantità obbligatoria")
    @Min(value = 1, message = "Quantità deve essere almeno 1")
    private Integer quantity;
    
    @DecimalMin(value = "0.0", inclusive = false, message = "Prezzo unitario deve essere positivo")
    private BigDecimal unitPrice;
    
    // Costruttori, getter e setter
    public UsedPartRequest() {}
    
    public String getPartName() { return partName; }
    public void setPartName(String partName) { this.partName = partName; }
    public String getPartNumber() { return partNumber; }
    public void setPartNumber(String partNumber) { this.partNumber = partNumber; }
    public String getBrand() { return brand; }
    public void setBrand(String brand) { this.brand = brand; }
    public Integer getQuantity() { return quantity; }
    public void setQuantity(Integer quantity) { this.quantity = quantity; }
    public BigDecimal getUnitPrice() { return unitPrice; }
    public void setUnitPrice(BigDecimal unitPrice) { this.unitPrice = unitPrice; }
}

/**
 * DTO per risposta intervento manutenzione
 */
public class MaintenanceRecordResponse {
    private Long id;
    private VehicleSummaryResponse vehicle;
    private WorkshopSummaryResponse workshop;
    private UserSummaryResponse mechanic;
    private Date serviceDate;
    private Integer mileageAtService;
    private MaintenanceType type;
    private String description;
    private String notes;
    private BigDecimal cost;
    private MaintenanceStatus status;
    private Date nextServiceDate;
    private Integer nextServiceMileage;
    private List<UsedPartResponse> usedParts;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    
    // Costruttori, getter e setter
    public MaintenanceRecordResponse() {}
    
    // Getter e setter (pattern simile ai precedenti)
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public VehicleSummaryResponse getVehicle() { return vehicle; }
    public void setVehicle(VehicleSummaryResponse vehicle) { this.vehicle = vehicle; }
    public WorkshopSummaryResponse getWorkshop() { return workshop; }
    public void setWorkshop(WorkshopSummaryResponse workshop) { this.workshop = workshop; }
    public UserSummaryResponse getMechanic() { return mechanic; }
    public void setMechanic(UserSummaryResponse mechanic) { this.mechanic = mechanic; }
    public Date getServiceDate() { return serviceDate; }
    public void setServiceDate(Date serviceDate) { this.serviceDate = serviceDate; }
    public Integer getMileageAtService() { return mileageAtService; }
    public void setMileageAtService(Integer mileageAtService) { this.mileageAtService = mileageAtService; }
    public MaintenanceType getType() { return type; }
    public void setType(MaintenanceType type) { this.type = type; }
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public String getNotes() { return notes; }
    public void setNotes(String notes) { this.notes = notes; }
    public BigDecimal getCost() { return cost; }
    public void setCost(BigDecimal cost) { this.cost = cost; }
    public MaintenanceStatus getStatus() { return status; }
    public void setStatus(MaintenanceStatus status) { this.status = status; }
    public Date getNextServiceDate() { return nextServiceDate; }
    public void setNextServiceDate(Date nextServiceDate) { this.nextServiceDate = nextServiceDate; }
    public Integer getNextServiceMileage() { return nextServiceMileage; }
    public void setNextServiceMileage(Integer nextServiceMileage) { this.nextServiceMileage = nextServiceMileage; }
    public List<UsedPartResponse> getUsedParts() { return usedParts; }
    public void setUsedParts(List<UsedPartResponse> usedParts) { this.usedParts = usedParts; }
    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
    public LocalDateTime getUpdatedAt() { return updatedAt; }
    public void setUpdatedAt(LocalDateTime updatedAt) { this.updatedAt = updatedAt; }
}

/**
 * DTO per parti utilizzate in output
 */
public class UsedPartResponse {
    private Long id;
    private String partName;
    private String partNumber;
    private String brand;
    private Integer quantity;
    private BigDecimal unitPrice;
    private BigDecimal totalPrice;
    
    // Costruttori, getter e setter
    public UsedPartResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getPartName() { return partName; }
    public void setPartName(String partName) { this.partName = partName; }
    public String getPartNumber() { return partNumber; }
    public void setPartNumber(String partNumber) { this.partNumber = partNumber; }
    public String getBrand() { return brand; }
    public void setBrand(String brand) { this.brand = brand; }
    public Integer getQuantity() { return quantity; }
    public void setQuantity(Integer quantity) { this.quantity = quantity; }
    public BigDecimal getUnitPrice() { return unitPrice; }
    public void setUnitPrice(BigDecimal unitPrice) { this.unitPrice = unitPrice; }
    public BigDecimal getTotalPrice() { return totalPrice; }
    public void setTotalPrice(BigDecimal totalPrice) { this.totalPrice = totalPrice; }
}

/**
 * DTO per completamento intervento
 */
public class CompleteMaintenanceRequest {
    @Size(max = 2000, message = "Note troppo lunghe")
    private String notes;
    
    @NotNull(message = "Chilometraggio finale obbligatorio")
    @Min(value = 0, message = "Chilometraggio non può essere negativo")
    private Integer finalMileage;
    
    // Costruttori, getter e setter
    public CompleteMaintenanceRequest() {}
    
    public String getNotes() { return notes; }
    public void setNotes(String notes) { this.notes = notes; }
    public Integer getFinalMileage() { return finalMileage; }
    public void setFinalMileage(Integer finalMileage) { this.finalMileage = finalMileage; }
}

/**
 * DTO per veicolo sommario
 */
public class VehicleSummaryResponse {
    private Long id;
    private String licensePlate;
    private String brand;
    private String model;
    private Integer year;
    private Integer mileage;
    
    // Costruttori, getter e setter
    public VehicleSummaryResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getLicensePlate() { return licensePlate; }
    public void setLicensePlate(String licensePlate) { this.licensePlate = licensePlate; }
    public String getBrand() { return brand; }
    public void setBrand(String brand) { this.brand = brand; }
    public String getModel() { return model; }
    public void setModel(String model) { this.model = model; }
    public Integer getYear() { return year; }
    public void setYear(Integer year) { this.year = year; }
    public Integer getMileage() { return mileage; }
    public void setMileage(Integer mileage) { this.mileage = mileage; }
}

/**
 * DTO per statistiche manutenzione
 */
public class MaintenanceStatsResponse {
    private BigDecimal totalCost;
    private Integer completedMaintenances;
    private Integer totalMaintenances;
    private BigDecimal averageCost;
    private Integer averageMileageBetweenServices;
    
    // Costruttori, getter e setter
    public MaintenanceStatsResponse() {}
    
    public BigDecimal getTotalCost() { return totalCost; }
    public void setTotalCost(BigDecimal totalCost) { this.totalCost = totalCost; }
    public Integer getCompletedMaintenances() { return completedMaintenances; }
    public void setCompletedMaintenances(Integer completedMaintenances) { this.completedMaintenances = completedMaintenances; }
    public Integer getTotalMaintenances() { return totalMaintenances; }
    public void setTotalMaintenances(Integer totalMaintenances) { this.totalMaintenances = totalMaintenances; }
    public BigDecimal getAverageCost() { return averageCost; }
    public void setAverageCost(BigDecimal averageCost) { this.averageCost = averageCost; }
    public Integer getAverageMileageBetweenServices() { return averageMileageBetweenServices; }
    public void setAverageMileageBetweenServices(Integer averageMileageBetweenServices) { this.averageMileageBetweenServices = averageMileageBetweenServices; }
}

// ========== WORKSHOP DTO ==========

/**
 * DTO per creazione officina
 */
public class WorkshopCreateRequest {
    @NotBlank(message = "Nome officina obbligatorio")
    private String name;
    
    @Size(max = 1000, message = "Descrizione troppo lunga")
    private String description;
    
    @NotBlank(message = "Indirizzo obbligatorio")
    private String address;
    
    @NotBlank(message = "Città obbligatoria")
    private String city;
    
    @NotBlank(message = "CAP obbligatorio")
    @Pattern(regexp = "^[0-9]{5}$", message = "CAP deve essere di 5 cifre")
    private String postalCode;
    
    @Pattern(regexp = "^[+]?[0-9\\s\\-\\(\\)]{10,15}$", message = "Numero di telefono non valido")
    private String phoneNumber;
    
    @Email(message = "Formato email non valido")
    private String email;
    
    @Pattern(regexp = "^(https?://).*", message = "URL non valido")
    private String website;
    
    @Pattern(regexp = "^[0-9]{11}$", message = "Partita IVA deve essere di 11 cifre")
    private String vatNumber;
    
    private String businessLicense;
    
    @NotEmpty(message = "Almeno un tipo di servizio obbligatorio")
    private Set<ServiceType> serviceTypes;
    
    // Costruttori, getter e setter
    public WorkshopCreateRequest() {}
    
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public String getAddress() { return address; }
    public void setAddress(String address) { this.address = address; }
    public String getCity() { return city; }
    public void setCity(String city) { this.city = city; }
    public String getPostalCode() { return postalCode; }
    public void setPostalCode(String postalCode) { this.postalCode = postalCode; }
    public String getPhoneNumber() { return phoneNumber; }
    public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    public String getWebsite() { return website; }
    public void setWebsite(String website) { this.website = website; }
    public String getVatNumber() { return vatNumber; }
    public void setVatNumber(String vatNumber) { this.vatNumber = vatNumber; }
    public String getBusinessLicense() { return businessLicense; }
    public void setBusinessLicense(String businessLicense) { this.businessLicense = businessLicense; }
    public Set<ServiceType> getServiceTypes() { return serviceTypes; }
    public void setServiceTypes(Set<ServiceType> serviceTypes) { this.serviceTypes = serviceTypes; }
}

// ========== INVOICE DTO ==========

/**
 * DTO per creazione fattura
 */
public class InvoiceCreateRequest {
    @NotNull(message = "Cliente obbligatorio")
    private Long customerId;
    
    private Long maintenanceRecordId;
    
    @NotNull(message = "Data emissione obbligatoria")
    private Date issueDate;
    
    @Future(message = "Data scadenza deve essere nel futuro")
    private Date dueDate;
    
    @DecimalMin(value = "0.0", message = "Aliquota IVA deve essere positiva")
    @DecimalMax(value = "100.0", message = "Aliquota IVA non può superare 100%")
    private BigDecimal vatRate;
    
    @Size(max = 1000, message = "Note troppo lunghe")
    private String notes;
    
    @NotEmpty(message = "La fattura deve contenere almeno una voce")
    @Valid
    private List<InvoiceItemRequest> items;
    
    // Costruttori, getter e setter
    public InvoiceCreateRequest() {}
    
    public Long getCustomerId() { return customerId; }
    public void setCustomerId(Long customerId) { this.customerId = customerId; }
    public Long getMaintenanceRecordId() { return maintenanceRecordId; }
    public void setMaintenanceRecordId(Long maintenanceRecordId) { this.maintenanceRecordId = maintenanceRecordId; }
    public Date getIssueDate() { return issueDate; }
    public void setIssueDate(Date issueDate) { this.issueDate = issueDate; }
    public Date getDueDate() { return dueDate; }
    public void setDueDate(Date dueDate) { this.dueDate = dueDate; }
    public BigDecimal getVatRate() { return vatRate; }
    public void setVatRate(BigDecimal vatRate) { this.vatRate = vatRate; }
    public String getNotes() { return notes; }
    public void setNotes(String notes) { this.notes = notes; }
    public List<InvoiceItemRequest> getItems() { return items; }
    public void setItems(List<InvoiceItemRequest> items) { this.items = items; }
}

/**
 * DTO per voce fattura in input
 */
public class InvoiceItemRequest {
    @NotBlank(message = "Descrizione obbligatoria")
    private String description;
    
    @NotNull(message = "Quantità obbligatoria")
    @Min(value = 1, message = "Quantità deve essere almeno 1")
    private Integer quantity;
    
    @NotNull(message = "Prezzo unitario obbligatorio")
    @DecimalMin(value = "0.0", inclusive = false, message = "Prezzo unitario deve essere positivo")
    private BigDecimal unitPrice;
    
    @NotNull(message = "Tipo voce obbligatorio")
    private ItemType itemType;
    
    // Costruttori, getter e setter
    public InvoiceItemRequest() {}
    
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public Integer getQuantity() { return quantity; }
    public void setQuantity(Integer quantity) { this.quantity = quantity; }
    public BigDecimal getUnitPrice() { return unitPrice; }
    public void setUnitPrice(BigDecimal unitPrice) { this.unitPrice = unitPrice; }
    public ItemType getItemType() { return itemType; }
    public void setItemType(ItemType itemType) { this.itemType = itemType; }
}

/**
 * DTO per risposta fattura
 */
public class InvoiceResponse {
    private Long id;
    private String invoiceNumber;
    private WorkshopSummaryResponse workshop;
    private UserSummaryResponse customer;
    private MaintenanceSummaryResponse maintenanceRecord;
    private Date issueDate;
    private Date dueDate;
    private BigDecimal subtotal;
    private BigDecimal vatRate;
    private BigDecimal vatAmount;
    private BigDecimal total;
    private InvoiceStatus status;
    private Date paidDate;
    private PaymentMethod paymentMethod;
    private String notes;
    private List<InvoiceItemResponse> items;
    private LocalDateTime createdAt;
    
    // Costruttori, getter e setter
    public InvoiceResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getInvoiceNumber() { return invoiceNumber; }
    public void setInvoiceNumber(String invoiceNumber) { this.invoiceNumber = invoiceNumber; }
    public WorkshopSummaryResponse getWorkshop() { return workshop; }
    public void setWorkshop(WorkshopSummaryResponse workshop) { this.workshop = workshop; }
    public UserSummaryResponse getCustomer() { return customer; }
    public void setCustomer(UserSummaryResponse customer) { this.customer = customer; }
    public MaintenanceSummaryResponse getMaintenanceRecord() { return maintenanceRecord; }
    public void setMaintenanceRecord(MaintenanceSummaryResponse maintenanceRecord) { this.maintenanceRecord = maintenanceRecord; }
    public Date getIssueDate() { return issueDate; }
    public void setIssueDate(Date issueDate) { this.issueDate = issueDate; }
    public Date getDueDate() { return dueDate; }
    public void setDueDate(Date dueDate) { this.dueDate = dueDate; }
    public BigDecimal getSubtotal() { return subtotal; }
    public void setSubtotal(BigDecimal subtotal) { this.subtotal = subtotal; }
    public BigDecimal getVatRate() { return vatRate; }
    public void setVatRate(BigDecimal vatRate) { this.vatRate = vatRate; }
    public BigDecimal getVatAmount() { return vatAmount; }
    public void setVatAmount(BigDecimal vatAmount) { this.vatAmount = vatAmount; }
    public BigDecimal getTotal() { return total; }
    public void setTotal(BigDecimal total) { this.total = total; }
    public InvoiceStatus getStatus() { return status; }
    public void setStatus(InvoiceStatus status) { this.status = status; }
    public Date getPaidDate() { return paidDate; }
    public void setPaidDate(Date paidDate) { this.paidDate = paidDate; }
    public PaymentMethod getPaymentMethod() { return paymentMethod; }
    public void setPaymentMethod(PaymentMethod paymentMethod) { this.paymentMethod = paymentMethod; }
    public String getNotes() { return notes; }
    public void setNotes(String notes) { this.notes = notes; }
    public List<InvoiceItemResponse> getItems() { return items; }
    public void setItems(List<InvoiceItemResponse> items) { this.items = items; }
    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
}

/**
 * DTO per voce fattura in output
 */
public class InvoiceItemResponse {
    private Long id;
    private String description;
    private Integer quantity;
    private BigDecimal unitPrice;
    private BigDecimal totalPrice;
    private ItemType itemType;
    
    // Costruttori, getter e setter
    public InvoiceItemResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public Integer getQuantity() { return quantity; }
    public void setQuantity(Integer quantity) { this.quantity = quantity; }
    public BigDecimal getUnitPrice() { return unitPrice; }
    public void setUnitPrice(BigDecimal unitPrice) { this.unitPrice = unitPrice; }
    public BigDecimal getTotalPrice() { return totalPrice; }
    public void setTotalPrice(BigDecimal totalPrice) { this.totalPrice = totalPrice; }
    public ItemType getItemType() { return itemType; }
    public void setItemType(ItemType itemType) { this.itemType = itemType; }
}

/**
 * DTO per manutenzione sommario
 */
public class MaintenanceSummaryResponse {
    private Long id;
    private Date serviceDate;
    private MaintenanceType type;
    private String description;
    private BigDecimal cost;
    
    // Costruttori, getter e setter
    public MaintenanceSummaryResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public Date getServiceDate() { return serviceDate; }
    public void setServiceDate(Date serviceDate) { this.serviceDate = serviceDate; }
    public MaintenanceType getType() { return type; }
    public void setType(MaintenanceType type) { this.type = type; }
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public BigDecimal getCost() { return cost; }
    public void setCost(BigDecimal cost) { this.cost = cost; }
}

/**
 * DTO per registrazione pagamento
 */
public class PaymentRequest {
    @NotNull(message = "Metodo di pagamento obbligatorio")
    private PaymentMethod paymentMethod;
    
    // Costruttori, getter e setter
    public PaymentRequest() {}
    
    public PaymentMethod getPaymentMethod() { return paymentMethod; }
    public void setPaymentMethod(PaymentMethod paymentMethod) { this.paymentMethod = paymentMethod; }
}

/**
 * DTO per statistiche fatturazione
 */
public class InvoiceStatsResponse {
    private BigDecimal totalRevenue;
    private BigDecimal pendingAmount;
    private Integer paidInvoices;
    private Integer overdueInvoices;
    private BigDecimal averageInvoiceValue;
    private Integer totalInvoices;
    
    // Costruttori, getter e setter
    public InvoiceStatsResponse() {}
    
    public BigDecimal getTotalRevenue() { return totalRevenue; }
    public void setTotalRevenue(BigDecimal totalRevenue) { this.totalRevenue = totalRevenue; }
    public BigDecimal getPendingAmount() { return pendingAmount; }
    public void setPendingAmount(BigDecimal pendingAmount) { this.pendingAmount = pendingAmount; }
    public Integer getPaidInvoices() { return paidInvoices; }
    public void setPaidInvoices(Integer paidInvoices) { this.paidInvoices = paidInvoices; }
    public Integer getOverdueInvoices() { return overdueInvoices; }
    public void setOverdueInvoices(Integer overdueInvoices) { this.overdueInvoices = overdueInvoices; }
    public BigDecimal getAverageInvoiceValue() { return averageInvoiceValue; }
    public void setAverageInvoiceValue(BigDecimal averageInvoiceValue) { this.averageInvoiceValue = averageInvoiceValue; }
    public Integer getTotalInvoices() { return totalInvoices; }
    public void setTotalInvoices(Integer totalInvoices) { this.totalInvoices = totalInvoices; }
}

// ========== REMINDER DTO ==========

/**
 * DTO per creazione promemoria
 */
public class ReminderCreateRequest {
    @NotNull(message = "Veicolo obbligatorio")
    private Long vehicleId;
    
    @NotBlank(message = "Titolo obbligatorio")
    private String title;
    
    @Size(max = 1000, message = "Descrizione troppo lunga")
    private String description;
    
    @NotNull(message = "Tipo promemoria obbligatorio")
    private ReminderType type;
    
    private Date reminderDate;
    
    @Min(value = 0, message = "Chilometraggio non può essere negativo")
    private Integer reminderMileage;
    
    private Boolean isRecurring = false;
    
    @Min(value = 1, message = "Intervallo giorni deve essere positivo")
    private Integer recurringIntervalDays;
    
    @Min(value = 1, message = "Intervallo chilometraggio deve essere positivo")
    private Integer recurringIntervalMileage;
    
    // Costruttori, getter e setter
    public ReminderCreateRequest() {}
    
    public Long getVehicleId() { return vehicleId; }
    public void setVehicleId(Long vehicleId) { this.vehicleId = vehicleId; }
    public String getTitle() { return title; }
    public void setTitle(String title) { this.title = title; }
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public ReminderType getType() { return type; }
    public void setType(ReminderType type) { this.type = type; }
    public Date getReminderDate() { return reminderDate; }
    public void setReminderDate(Date reminderDate) { this.reminderDate = reminderDate; }
    public Integer getReminderMileage() { return reminderMileage; }
    public void setReminderMileage(Integer reminderMileage) { this.reminderMileage = reminderMileage; }
    public Boolean getIsRecurring() { return isRecurring; }
    public void setIsRecurring(Boolean isRecurring) { this.isRecurring = isRecurring; }
    public Integer getRecurringIntervalDays() { return recurringIntervalDays; }
    public void setRecurringIntervalDays(Integer recurringIntervalDays) { this.recurringIntervalDays = recurringIntervalDays; }
    public Integer getRecurringIntervalMileage() { return recurringIntervalMileage; }
    public void setRecurringIntervalMileage(Integer recurringIntervalMileage) { this.recurringIntervalMileage = recurringIntervalMileage; }
}

/**
 * DTO per risposta promemoria
 */
public class ReminderResponse {
    private Long id;
    private VehicleSummaryResponse vehicle;
    private String title;
    private String description;
    private ReminderType type;
    private Date reminderDate;
    private Integer reminderMileage;
    private Boolean isActive;
    private Boolean isRecurring;
    private Integer recurringIntervalDays;
    private Integer recurringIntervalMileage;
    private Boolean isOverdue;
    private Integer daysUntilDue;
    private Integer mileageUntilDue;
    private LocalDateTime createdAt;
    
    // Costruttori, getter e setter
    public ReminderResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public VehicleSummaryResponse getVehicle() { return vehicle; }
    public void setVehicle(VehicleSummaryResponse vehicle) { this.vehicle = vehicle; }
    public String getTitle() { return title; }
    public void setTitle(String title) { this.title = title; }
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public ReminderType getType() { return type; }
    public void setType(ReminderType type) { this.type = type; }
    public Date getReminderDate() { return reminderDate; }
    public void setReminderDate(Date reminderDate) { this.reminderDate = reminderDate; }
    public Integer getReminderMileage() { return reminderMileage; }
    public void setReminderMileage(Integer reminderMileage) { this.reminderMileage = reminderMileage; }
    public Boolean getIsActive() { return isActive; }
    public void setIsActive(Boolean isActive) { this.isActive = isActive; }
    public Boolean getIsRecurring() { return isRecurring; }
    public void setIsRecurring(Boolean isRecurring) { this.isRecurring = isRecurring; }
    public Integer getRecurringIntervalDays() { return recurringIntervalDays; }
    public void setRecurringIntervalDays(Integer recurringIntervalDays) { this.recurringIntervalDays = recurringIntervalDays; }
    public Integer getRecurringIntervalMileage() { return recurringIntervalMileage; }
    public void setRecurringIntervalMileage(Integer recurringIntervalMileage) { this.recurringIntervalMileage = recurringIntervalMileage; }
    public Boolean getIsOverdue() { return isOverdue; }
    public void setIsOverdue(Boolean isOverdue) { this.isOverdue = isOverdue; }
    public Integer getDaysUntilDue() { return daysUntilDue; }
    public void setDaysUntilDue(Integer daysUntilDue) { this.daysUntilDue = daysUntilDue; }
    public Integer getMileageUntilDue() { return mileageUntilDue; }
    public void setMileageUntilDue(Integer mileageUntilDue) { this.mileageUntilDue = mileageUntilDue; }
    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
}

// ========== MAPPER UTILITY ==========

/**
 * Utility class per convertire tra entità e DTO
 */
@Component
public class DTOMapper {
    
    // User mappings
    public UserProfileResponse toUserProfileResponse(User user) {
        UserProfileResponse dto = new UserProfileResponse();
        dto.setId(user.getId());
        dto.setEmail(user.getEmail());
        dto.setFirstName(user.getFirstName());
        dto.setLastName(user.getLastName());
        dto.setPhoneNumber(user.getPhoneNumber());
        dto.setRole(user.getRole());
        dto.setAddress(user.getAddress());
        dto.setCity(user.getCity());
        dto.setPostalCode(user.getPostalCode());
        dto.setFiscalCode(user.getFiscalCode());
        dto.setVatNumber(user.getVatNumber());
        dto.setCreatedAt(user.getCreatedAt());
        return dto;
    }
    
    public UserSummaryResponse toUserSummaryResponse(User user) {
        UserSummaryResponse dto = new UserSummaryResponse();
        dto.setId(user.getId());
        dto.setFirstName(user.getFirstName());
        dto.setLastName(user.getLastName());
        dto.setEmail(user.getEmail());
        dto.setRole(user.getRole());
        return dto;
    }
    
    public User toUserEntity(UserRegistrationRequest request) {
        User user = new User();
        user.setEmail(request.getEmail());
        user.setPassword(request.getPassword());
        user.setFirstName(request.getFirstName());
        user.setLastName(request.getLastName());
        user.setPhoneNumber(request.getPhoneNumber());
        user.setRole(request.getRole());
        user.setAddress(request.getAddress());
        user.setCity(request.getCity());
        user.setPostalCode(request.getPostalCode());
        user.setFiscalCode(request.getFiscalCode());
        user.setVatNumber(request.getVatNumber());
        return user;
    }
    
    // Vehicle mappings
    public VehicleResponse toVehicleResponse(Vehicle vehicle) {
        VehicleResponse dto = new VehicleResponse();
        dto.setId(vehicle.getId());
        dto.setLicensePlate(vehicle.getLicensePlate());
        dto.setVin(vehicle.getVin());
        dto.setModel(toVehicleModelResponse(vehicle.getModel()));
        dto.setOwner(toUserSummaryResponse(vehicle.getOwner()));
        dto.setYear(vehicle.getYear());
        dto.setColor(vehicle.getColor());
        dto.setMileage(vehicle.getMileage());
        dto.setEngineCode(vehicle.getEngineCode());
        dto.setFuelType(vehicle.getFuelType());
        dto.setRegistrationDate(vehicle.getRegistrationDate());
        dto.setLastInspectionDate(vehicle.getLastInspectionDate());
        dto.setNextInspectionDate(vehicle.getNextInspectionDate());
        dto.setInsuranceExpiryDate(vehicle.getInsuranceExpiryDate());
        dto.setCreatedAt(vehicle.getCreatedAt());
        return dto;
    }
    
    public VehicleSummaryResponse toVehicleSummaryResponse(Vehicle vehicle) {
        VehicleSummaryResponse dto = new VehicleSummaryResponse();
        dto.setId(vehicle.getId());
        dto.setLicensePlate(vehicle.getLicensePlate());
        dto.setBrand(vehicle.getModel().getBrand());
        dto.setModel(vehicle.getModel().getModel());
        dto.setYear(vehicle.getYear());
        dto.setMileage(vehicle.getMileage());
        return dto;
    }
    
    public VehicleModelResponse toVehicleModelResponse(VehicleModel model) {
        VehicleModelResponse dto = new VehicleModelResponse();
        dto.setId(model.getId());
        dto.setBrand(model.getBrand());
        dto.setModel(model.getModel());
        dto.setGeneration(model.getGeneration());
        dto.setYearFrom(model.getYearFrom());
        dto.setYearTo(model.getYearTo());
        return dto;
    }
    
    // Workshop mappings
    public WorkshopResponse toWorkshopResponse(Workshop workshop) {
        WorkshopResponse dto = new WorkshopResponse();
        dto.setId(workshop.getId());
        dto.setOwner(toUserSummaryResponse(workshop.getOwner()));
        dto.setName(workshop.getName());
        dto.setDescription(workshop.getDescription());
        dto.setAddress(workshop.getAddress());
        dto.setCity(workshop.getCity());
        dto.setPostalCode(workshop.getPostalCode());
        dto.setPhoneNumber(workshop.getPhoneNumber());
        dto.setEmail(workshop.getEmail());
        dto.setWebsite(workshop.getWebsite());
        dto.setVatNumber(workshop.getVatNumber());
        dto.setBusinessLicense(workshop.getBusinessLicense());
        dto.setServiceTypes(workshop.getServiceTypes());
        dto.setCreatedAt(workshop.getCreatedAt());
        return dto;
    }
    
    public WorkshopSummaryResponse toWorkshopSummaryResponse(Workshop workshop) {
        WorkshopSummaryResponse dto = new WorkshopSummaryResponse();
        dto.setId(workshop.getId());
        dto.setName(workshop.getName());
        dto.setCity(workshop.getCity());
        dto.setPhoneNumber(workshop.getPhoneNumber());
        dto.setServiceTypes(workshop.getServiceTypes());
        return dto;
    }
    
    public Workshop toWorkshopEntity(WorkshopCreateRequest request) {
        Workshop workshop = new Workshop();
        workshop.setName(request.getName());
        workshop.setDescription(request.getDescription());
        workshop.setAddress(request.getAddress());
        workshop.setCity(request.getCity());
        workshop.setPostalCode(request.getPostalCode());
        workshop.setPhoneNumber(request.getPhoneNumber());
        workshop.setEmail(request.getEmail());
        workshop.setWebsite(request.getWebsite());
        workshop.setVatNumber(request.getVatNumber());
        workshop.setBusinessLicense(request.getBusinessLicense());
        workshop.setServiceTypes(request.getServiceTypes());
        return workshop;
    }
    
    // Maintenance mappings
    public MaintenanceRecordResponse toMaintenanceRecordResponse(MaintenanceRecord record) {
        MaintenanceRecordResponse dto = new MaintenanceRecordResponse();
        dto.setId(record.getId());
        dto.setVehicle(toVehicleSummaryResponse(record.getVehicle()));
        if (record.getWorkshop() != null) {
            dto.setWorkshop(toWorkshopSummaryResponse(record.getWorkshop()));
        }
        if (record.getMechanic() != null) {
            dto.setMechanic(toUserSummaryResponse(record.getMechanic()));
        }
        dto.setServiceDate(record.getServiceDate());
        dto.setMileageAtService(record.getMileageAtService());
        dto.setType(record.getType());
        dto.setDescription(record.getDescription());
        dto.setNotes(record.getNotes());
        dto.setCost(record.getCost());
        dto.setStatus(record.getStatus());
        dto.setNextServiceDate(record.getNextServiceDate());
        dto.setNextServiceMileage(record.getNextServiceMileage());
        if (record.getUsedParts() != null) {
            dto.setUsedParts(record.getUsedParts().stream()
                    .map(this::toUsedPartResponse)
                    .collect(Collectors.toList()));
        }
        dto.setCreatedAt(record.getCreatedAt());
        dto.setUpdatedAt(record.getUpdatedAt());
        return dto;
    }
    
    public UsedPartResponse toUsedPartResponse(UsedPart part) {
        UsedPartResponse dto = new UsedPartResponse();
        dto.setId(part.getId());
        dto.setPartName(part.getPartName());
        dto.setPartNumber(part.getPartNumber());
        dto.setBrand(part.getBrand());
        dto.setQuantity(part.getQuantity());
        dto.setUnitPrice(part.getUnitPrice());
        dto.setTotalPrice(part.getTotalPrice());
        return dto;
    }
    
    // Reminder mappings
    public ReminderResponse toReminderResponse(Reminder reminder) {
        ReminderResponse dto = new ReminderResponse();
        dto.setId(reminder.getId());
        dto.setVehicle(toVehicleSummaryResponse(reminder.getVehicle()));
        dto.setTitle(reminder.getTitle());
        dto.setDescription(reminder.getDescription());
        dto.setType(reminder.getType());
        dto.setReminderDate(reminder.getReminderDate());
        dto.setReminderMileage(reminder.getReminderMileage());
        dto.setIsActive(reminder.getIsActive());
        dto.setIsRecurring(reminder.getIsRecurring());
        dto.setRecurringIntervalDays(reminder.getRecurringIntervalDays());
        dto.setRecurringIntervalMileage(reminder.getRecurringIntervalMileage());
        dto.setCreatedAt(reminder.getCreatedAt());
        
        // Calcola se è scaduto e giorni/km rimanenti
        calculateReminderStatus(dto, reminder);
        
        return dto;
    }
    
    private void calculateReminderStatus(ReminderResponse dto, Reminder reminder) {
        Date now = new Date();
        
        if (reminder.getReminderDate() != null) {
            dto.setIsOverdue(reminder.getReminderDate().before(now));
            long diffTime = reminder.getReminderDate().getTime() - now.getTime();
            dto.setDaysUntilDue((int) (diffTime / (1000 * 60 * 60 * 24)));
        }
        
        if (reminder.getReminderMileage() != null && reminder.getVehicle().getMileage() != null) {
            dto.setMileageUntilDue(reminder.getReminderMileage() - reminder.getVehicle().getMileage());
        }
    }
}

/**
 * DTO per risposta officina
 */
public class WorkshopResponse {
    private Long id;
    private UserSummaryResponse owner;
    private String name;
    private String description;
    private String address;
    private String city;
    private String postalCode;
    private String phoneNumber;
    private String email;
    private String website;
    private String vatNumber;
    private String businessLicense;
    private Set<ServiceType> serviceTypes;
    private LocalDateTime createdAt;
    
    // Costruttori, getter e setter
    public WorkshopResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public UserSummaryResponse getOwner() { return owner; }
    public void setOwner(UserSummaryResponse owner) { this.owner = owner; }
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    public String getAddress() { return address; }
    public void setAddress(String address) { this.address = address; }
    public String getCity() { return city; }
    public void setCity(String city) { this.city = city; }
    public String getPostalCode() { return postalCode; }
    public void setPostalCode(String postalCode) { this.postalCode = postalCode; }
    public String getPhoneNumber() { return phoneNumber; }
    public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    public String getWebsite() { return website; }
    public void setWebsite(String website) { this.website = website; }
    public String getVatNumber() { return vatNumber; }
    public void setVatNumber(String vatNumber) { this.vatNumber = vatNumber; }
    public String getBusinessLicense() { return businessLicense; }
    public void setBusinessLicense(String businessLicense) { this.businessLicense = businessLicense; }
    public Set<ServiceType> getServiceTypes() { return serviceTypes; }
    public void setServiceTypes(Set<ServiceType> serviceTypes) { this.serviceTypes = serviceTypes; }
    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
}

/**
 * DTO per officina sommario
 */
public class WorkshopSummaryResponse {
    private Long id;
    private String name;
    private String city;
    private String phoneNumber;
    private Set<ServiceType> serviceTypes;
    
    // Costruttori, getter e setter
    public WorkshopSummaryResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    public String getCity() { return city; }
    public void setCity(String city) { this.city = city; }
    public String getPhoneNumber() { return phoneNumber; }
    public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }
    public Set<ServiceType> getServiceTypes() { return serviceTypes; }
    public void setServiceTypes(Set<ServiceType> serviceTypes) { this.serviceTypes = serviceTypes; }
}

/**
 * DTO per risposta veicolo
 */
public class VehicleResponse {
    private Long id;
    private String licensePlate;
    private String vin;
    private VehicleModelResponse model;
    private UserSummaryResponse owner;
    private Integer year;
    private String color;
    private Integer mileage;
    private String engineCode;
    private String fuelType;
    private Date registrationDate;
    private Date lastInspectionDate;
    private Date nextInspectionDate;
    private Date insuranceExpiryDate;
    private LocalDateTime createdAt;
    
    // Costruttori, getter e setter
    public VehicleResponse() {}
    
    // Getter e setter (simili al pattern precedente)
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getLicensePlate() { return licensePlate; }
    public void setLicensePlate(String licensePlate) { this.licensePlate = licensePlate; }
    public String getVin() { return vin; }
    public void setVin(String vin) { this.vin = vin; }
    public VehicleModelResponse getModel() { return model; }
    public void setModel(VehicleModelResponse model) { this.model = model; }
    public UserSummaryResponse getOwner() { return owner; }
    public void setOwner(UserSummaryResponse owner) { this.owner = owner; }
    public Integer getYear() { return year; }
    public void setYear(Integer year) { this.year = year; }
    public String getColor() { return color; }
    public void setColor(String color) { this.color = color; }
    public Integer getMileage() { return mileage; }
    public void setMileage(Integer mileage) { this.mileage = mileage; }
    public String getEngineCode() { return engineCode; }
    public void setEngineCode(String engineCode) { this.engineCode = engineCode; }
    public String getFuelType() { return fuelType; }
    public void setFuelType(String fuelType) { this.fuelType = fuelType; }
    public Date getRegistrationDate() { return registrationDate; }
    public void setRegistrationDate(Date registrationDate) { this.registrationDate = registrationDate; }
    public Date getLastInspectionDate() { return lastInspectionDate; }
    public void setLastInspectionDate(Date lastInspectionDate) { this.lastInspectionDate = lastInspectionDate; }
    public Date getNextInspectionDate() { return nextInspectionDate; }
    public void setNextInspectionDate(Date nextInspectionDate) { this.nextInspectionDate = nextInspectionDate; }
    public Date getInsuranceExpiryDate() { return insuranceExpiryDate; }
    public void setInsuranceExpiryDate(Date insuranceExpiryDate) { this.insuranceExpiryDate = insuranceExpiryDate; }
    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
}

/**
 * DTO per risposta modello veicolo
 */
public class VehicleModelResponse {
    private Long id;
    private String brand;
    private String model;
    private String generation;
    private Integer yearFrom;
    private Integer yearTo;
    
    // Costruttori, getter e setter
    public VehicleModelResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getBrand() { return brand; }
    public void setBrand(String brand) { this.brand = brand; }
    public String getModel() { return model; }
    public void setModel(String model) { this.model = model; }
    public String getGeneration() { return generation; }
    public void setGeneration(String generation) { this.generation = generation; }
    public Integer getYearFrom() { return yearFrom; }
    public void setYearFrom(Integer yearFrom) { this.yearFrom = yearFrom; }
    public Integer getYearTo() { return yearTo; }
    public void setYearTo(Integer yearTo) { this.yearTo = yearTo; }
}

/**
 * DTO per utente sommario (per evitare cicli di serializzazione)
 */
public class UserSummaryResponse {
    private Long id;
    private String firstName;
    private String lastName;
    private String email;
    private UserRole role;
    
    // Costruttori, getter e setter
    public UserSummaryResponse() {}
    
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getFirstName() { return firstName; }
    public void setFirstName(String firstName) { this.firstName = firstName; }
    public String getLastName() { return lastName; }
    public void setLastName(String lastName) { this.lastName = lastName; }
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    public UserRole getRole() { return role; }
    public void setRole(UserRole role) { this.role = role; }
}

/**
 * DTO per aggiornamento chilometraggio
 */
public class MileageUpdateRequest {
    @NotNull(message = "Chilometraggio obbligatorio")
    @Min(value = 0, message = "Chilometraggio non può essere negativo")
    private Integer mileage;
    
    // Costruttori, getter e setter
    public MileageUpdateRequest() {}
    
    public Integer getMileage() { return mileage; }
    public void setMileage(Integer mileage) { this.mileage = mileage; }
}

/**
 * DTO per aggiornamento scadenze
 */
public class ExpiryDatesUpdateRequest {
    @Future(message = "Data prossima revisione deve essere nel futuro")
    private Date nextInspectionDate;
    
    @Future(message = "Scadenza assicurazione deve essere nel futuro")
    private Date insuranceExpiryDate;
    
    // Costruttori, getter e setter
    public ExpiryDatesUpdateRequest() {}
    
    public Date getNextInspectionDate() { return nextInspectionDate; }
    public void setNextInspectionDate(Date nextInspectionDate) { this.nextInspectionDate = nextInspectionDate; }
    public Date getInsuranceExpiryDate() { return insuranceExpiryDate; }
    public void setInsuranceExpiryDate(Date insuranceExpiryDate) { this.insuranceExpiryDate = insuranceExpiryDate; }
}   